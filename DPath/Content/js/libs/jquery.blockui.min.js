(function () { function a(a) { function h(c, h) { var j, l; var p = c == window; var q = h && h.message !== undefined ? h.message : undefined; h = a.extend({}, a.blockUI.defaults, h || {}); if (h.ignoreIfBlocked && a(c).data("blockUI.isBlocked")) return; h.overlayCSS = a.extend({}, a.blockUI.defaults.overlayCSS, h.overlayCSS || {}); j = a.extend({}, a.blockUI.defaults.css, h.css || {}); l = a.extend({}, a.blockUI.defaults.themedCSS, h.themedCSS || {}); q = q === undefined ? h.message : q; if (p && f) i(window, { fadeOut: 0 }); if (q && typeof q != "string" && (q.parentNode || q.jquery)) { var r = q.jquery ? q[0] : q; var s = {}; a(c).data("blockUI.history", s); s.el = r; s.parent = r.parentNode; s.display = r.style.display; s.position = r.style.position; if (s.parent) s.parent.removeChild(r) } a(c).data("blockUI.onUnblock", h.onUnblock); var t = h.baseZ; var u = a.browser.msie || h.forceIframe ? a('<iframe class="blockUI" style="z-index:' + t++ + ';display:none;border:none;margin:0;padding:0;position:absolute;width:100%;height:100%;top:0;left:0" src="' + h.iframeSrc + '"></iframe>') : a('<div class="blockUI" style="display:none"></div>'); var v = h.theme ? a('<div class="blockUI blockOverlay ui-widget-overlay" style="z-index:' + t++ + ';display:none"></div>') : a('<div class="blockUI blockOverlay" style="z-index:' + t++ + ';display:none;border:none;margin:0;padding:0;width:100%;height:100%;top:0;left:0"></div>'); var w, x; if (h.theme && p) { x = '<div class="blockUI ' + h.blockMsgClass + ' blockPage ui-dialog ui-widget ui-corner-all" style="z-index:' + (t + 10) + ';display:none;position:fixed">' + '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">' + (h.title || " ") + "</div>" + '<div class="ui-widget-content ui-dialog-content"></div>' + "</div>" } else if (h.theme) { x = '<div class="blockUI ' + h.blockMsgClass + ' blockElement ui-dialog ui-widget ui-corner-all" style="z-index:' + (t + 10) + ';display:none;position:absolute">' + '<div class="ui-widget-header ui-dialog-titlebar ui-corner-all blockTitle">' + (h.title || " ") + "</div>" + '<div class="ui-widget-content ui-dialog-content"></div>' + "</div>" } else if (p) { x = '<div class="blockUI ' + h.blockMsgClass + ' blockPage" style="z-index:' + (t + 10) + ';display:none;position:fixed"></div>' } else { x = '<div class="blockUI ' + h.blockMsgClass + ' blockElement" style="z-index:' + (t + 10) + ';display:none;position:absolute"></div>' } w = a(x); if (q) { if (h.theme) { w.css(l); w.addClass("ui-widget-content") } else w.css(j) } if (!h.theme && (!h.applyPlatformOpacityRules || !(a.browser.mozilla && /Linux/.test(navigator.platform)))) v.css(h.overlayCSS); v.css("position", p ? "fixed" : "absolute"); if (a.browser.msie || h.forceIframe) u.css("opacity", 0); var y = [u, v, w], z = p ? a("body") : a(c); a.each(y, function () { this.appendTo(z) }); if (h.theme && h.draggable && a.fn.draggable) { w.draggable({ handle: ".ui-dialog-titlebar", cancel: "li" }) } var A = d && (!a.boxModel || a("object,embed", p ? null : c).length > 0); if (e || A) { if (p && h.allowBodyStretch && a.boxModel) a("html,body").css("height", "100%"); if ((e || !a.boxModel) && !p) { var B = o(c, "borderTopWidth"), C = o(c, "borderLeftWidth"); var D = B ? "(0 - " + B + ")" : 0; var E = C ? "(0 - " + C + ")" : 0 } a.each([u, v, w], function (a, b) { var c = b[0].style; c.position = "absolute"; if (a < 2) { p ? c.setExpression("height", "Math.max(document.body.scrollHeight, document.body.offsetHeight) - (jQuery.boxModel?0:" + h.quirksmodeOffsetHack + ') + "px"') : c.setExpression("height", 'this.parentNode.offsetHeight + "px"'); p ? c.setExpression("width", 'jQuery.boxModel && document.documentElement.clientWidth || document.body.clientWidth + "px"') : c.setExpression("width", 'this.parentNode.offsetWidth + "px"'); if (E) c.setExpression("left", E); if (D) c.setExpression("top", D) } else if (h.centerY) { if (p) c.setExpression("top", '(document.documentElement.clientHeight || document.body.clientHeight) / 2 - (this.offsetHeight / 2) + (blah = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"'); c.marginTop = 0 } else if (!h.centerY && p) { var d = h.css && h.css.top ? parseInt(h.css.top) : 0; var e = "((document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + " + d + ') + "px"'; c.setExpression("top", e) } }) } if (q) { if (h.theme) w.find(".ui-widget-content").append(q); else w.append(q); if (q.jquery || q.nodeType) a(q).show() } if ((a.browser.msie || h.forceIframe) && h.showOverlay) u.show(); if (h.fadeIn) { var F = h.onBlock ? h.onBlock : b; var G = h.showOverlay && !q ? F : b; var H = q ? F : b; if (h.showOverlay) v._fadeIn(h.fadeIn, G); if (q) w._fadeIn(h.fadeIn, H) } else { if (h.showOverlay) v.show(); if (q) w.show(); if (h.onBlock) h.onBlock() } k(1, c, h); if (p) { f = w[0]; g = a(":input:enabled:visible", f); if (h.focusInput) setTimeout(m, 20) } else n(w[0], h.centerX, h.centerY); if (h.timeout) { var I = setTimeout(function () { p ? a.unblockUI(h) : a(c).unblock(h) }, h.timeout); a(c).data("blockUI.timeout", I) } } function i(b, c) { var d = b == window; var e = a(b); var h = e.data("blockUI.history"); var i = e.data("blockUI.timeout"); if (i) { clearTimeout(i); e.removeData("blockUI.timeout") } c = a.extend({}, a.blockUI.defaults, c || {}); k(0, b, c); if (c.onUnblock === null) { c.onUnblock = e.data("blockUI.onUnblock"); e.removeData("blockUI.onUnblock") } var l; if (d) l = a("body").children().filter(".blockUI").add("body > .blockUI"); else l = a(".blockUI", b); if (d) f = g = null; if (c.fadeOut) { l.fadeOut(c.fadeOut); setTimeout(function () { j(l, h, c, b) }, c.fadeOut) } else j(l, h, c, b) } function j(b, c, d, e) { b.each(function (a, b) { if (this.parentNode) this.parentNode.removeChild(this) }); if (c && c.el) { c.el.style.display = c.display; c.el.style.position = c.position; if (c.parent) c.parent.appendChild(c.el); a(e).removeData("blockUI.history") } if (typeof d.onUnblock == "function") d.onUnblock(e, d) } function k(b, c, d) { var e = c == window, g = a(c); if (!b && (e && !f || !e && !g.data("blockUI.isBlocked"))) return; g.data("blockUI.isBlocked", b); if (!d.bindEvents || b && !d.showOverlay) return; var h = "mousedown mouseup keydown keypress"; b ? a(document).bind(h, d, l) : a(document).unbind(h, l) } function l(b) { if (b.keyCode && b.keyCode == 9) { if (f && b.data.constrainTabKey) { var c = g; var d = !b.shiftKey && b.target === c[c.length - 1]; var e = b.shiftKey && b.target === c[0]; if (d || e) { setTimeout(function () { m(e) }, 10); return false } } } var h = b.data; if (a(b.target).parents("div." + h.blockMsgClass).length > 0) return true; return a(b.target).parents().children().filter("div.blockUI").length == 0 } function m(a) { if (!g) return; var b = g[a === true ? g.length - 1 : 0]; if (b) b.focus() } function n(a, b, c) { var d = a.parentNode, e = a.style; var f = (d.offsetWidth - a.offsetWidth) / 2 - o(d, "borderLeftWidth"); var g = (d.offsetHeight - a.offsetHeight) / 2 - o(d, "borderTopWidth"); if (b) e.left = f > 0 ? f + "px" : "0"; if (c) e.top = g > 0 ? g + "px" : "0" } function o(b, c) { return parseInt(a.css(b, c)) || 0 } if (/1\.(0|1|2)\.(0|1|2)/.test(a.fn.jquery) || /^1.1/.test(a.fn.jquery)) { alert("blockUI requires jQuery v1.2.3 or later!  You are using v" + a.fn.jquery); return } a.fn._fadeIn = a.fn.fadeIn; var b = function () { }; var c = document.documentMode || 0; var d = a.browser.msie && (a.browser.version < 8 && !c || c < 8); var e = a.browser.msie && /MSIE 6.0/.test(navigator.userAgent) && !c; a.blockUI = function (a) { h(window, a) }; a.unblockUI = function (a) { i(window, a) }; a.growlUI = function (b, c, d, e) { var f = a('<div class="growlUI"></div>'); if (b) f.append("<h1>" + b + "</h1>"); if (c) f.append("<h2>" + c + "</h2>"); if (d == undefined) d = 3e3; a.blockUI({ message: f, fadeIn: 700, fadeOut: 1e3, centerY: false, timeout: d, showOverlay: false, onUnblock: e, css: a.blockUI.defaults.growlCSS }) }; a.fn.block = function (b) { var c = a.extend({}, a.blockUI.defaults, b || {}); this.each(function () { var b = a(this); if (c.ignoreIfBlocked && b.data("blockUI.isBlocked")) return; b.unblock({ fadeOut: 0 }) }); return this.each(function () { if (a.css(this, "position") == "static") this.style.position = "relative"; if (a.browser.msie) this.style.zoom = 1; h(this, b) }) }; a.fn.unblock = function (a) { return this.each(function () { i(this, a) }) }; a.blockUI.version = 2.42; a.blockUI.defaults = { message: "<h1>Please wait...</h1>", title: null, draggable: true, theme: false, css: { padding: 0, margin: 0, width: "30%", top: "40%", left: "35%", textAlign: "center", color: "#000", border: "3px solid #aaa", backgroundColor: "#fff", cursor: "wait" }, themedCSS: { width: "30%", top: "40%", left: "35%" }, overlayCSS: { backgroundColor: "#000", opacity: .6, cursor: "wait" }, growlCSS: { width: "350px", top: "10px", left: "", right: "10px", border: "none", padding: "5px", opacity: .6, cursor: "default", color: "#fff", backgroundColor: "#000", "-webkit-border-radius": "10px", "-moz-border-radius": "10px", "border-radius": "10px" }, iframeSrc: /^https/i.test(window.location.href || "") ? "javascript:false" : "about:blank", forceIframe: false, baseZ: 1e3, centerX: true, centerY: true, allowBodyStretch: true, bindEvents: true, constrainTabKey: true, fadeIn: 200, fadeOut: 400, timeout: 0, showOverlay: true, focusInput: true, applyPlatformOpacityRules: true, onBlock: null, onUnblock: null, quirksmodeOffsetHack: 4, blockMsgClass: "blockMsg", ignoreIfBlocked: false }; var f = null; var g = []; } if (typeof define === "function" && define.amd && define.amd.jQuery) { define(["jquery"], a) } else { a(jQuery) } })()